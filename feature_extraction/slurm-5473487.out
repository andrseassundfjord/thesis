Using device: cuda
Start training
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1))/work6/a_sundfjord/thesis/env/lib/python3.8/site-packages/torch/nn/modules/loss.py:536: UserWarning: Using a target size (torch.Size([2, 200, 352])) that is different to the input size (torch.Size([2, 3, 32, 16, 16])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
 torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([1, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([1, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([1, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 16, 4, 2, 2])
Flatten() torch.Size([1, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([1, 32])
LeakyReLU(negative_slope=0.01) torch.Size([1, 32])
Decoder
torch.Size([1, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([1, 32])
ReLU() torch.Size([1, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([1, 256])
ReLU() torch.Size([1, 256])
Reshape() torch.Size([1, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 16, 8, 4, 4])
ReLU() torch.Size([1, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 16, 16, 8, 8])
ReLU() torch.Size([1, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([1, 3, 32, 16, 16])
Sigmoid() torch.Size([1, 3, 32, 16, 16])
output shape:  torch.Size([1, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
input shape:  torch.Size([2, 3, 32, 16, 16])
ENCODER
Conv3d(3, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 16, 8, 8])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
LeakyReLU(negative_slope=0.01) torch.Size([2, 16, 8, 4, 4])
Conv3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 4, 2, 2])
Flatten() torch.Size([2, 256])
Linear(in_features=256, out_features=32, bias=True) torch.Size([2, 32])
LeakyReLU(negative_slope=0.01) torch.Size([2, 32])
Decoder
torch.Size([2, 4])
Linear(in_features=4, out_features=32, bias=True) torch.Size([2, 32])
ReLU() torch.Size([2, 32])
Linear(in_features=32, out_features=256, bias=True) torch.Size([2, 256])
ReLU() torch.Size([2, 256])
Reshape() torch.Size([2, 16, 4, 2, 2])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 8, 4, 4])
ReLU() torch.Size([2, 16, 8, 4, 4])
ConvTranspose3d(16, 16, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 16, 16, 8, 8])
ReLU() torch.Size([2, 16, 16, 8, 8])
ConvTranspose3d(16, 3, kernel_size=(4, 4, 4), stride=(2, 2, 2), padding=(1, 1, 1)) torch.Size([2, 3, 32, 16, 16])
Sigmoid() torch.Size([2, 3, 32, 16, 16])
output shape:  torch.Size([2, 3, 32, 16, 16])
Traceback (most recent call last):
  File "run_MVAE.py", line 115, in <module>
    loss = reconstruction_loss(recon_timeseries, timeseries)
  File "/work6/a_sundfjord/thesis/env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work6/a_sundfjord/thesis/env/lib/python3.8/site-packages/torch/nn/modules/loss.py", line 536, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/work6/a_sundfjord/thesis/env/lib/python3.8/site-packages/torch/nn/functional.py", line 3291, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/work6/a_sundfjord/thesis/env/lib/python3.8/site-packages/torch/functional.py", line 74, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (16) must match the size of tensor b (352) at non-singleton dimension 4
